pipeline {
    agent any

    environment {
        // .env 파일의 환경 변수를 빌드 환경으로 설정
        DOT_DEV = credentials('osondoson-backend-env')
        ECR_REPO = '014276069644.dkr.ecr.ap-northeast-2.amazonaws.com/osondoson-backend'

        AWS_CREDENTIAL_ID = 'ecr-user'
        REGION = 'ap-northeast-2'

        // elice VM에 접속하기 위한 credential
        VM_ENTER_CREDENTIAL_ID = 'enter-vm-credential'
        // VM 자체에 대한 credential (사용자 이름, 패스워드)
        OSONDOSON_VM_CREDENTIAL_ID = 'osondoson-vm-credential'
        // VM 호스트
        TARGET_HOST = "34.64.144.19"
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir() // 이전에 가져온 소스 코드를 모두 삭제
                checkout scm
                sh 'git checkout develop'
            }
        }

        stage('Append .env file') {
            steps {
                withCredentials([file(credentialsId: 'osondoson-backend-env', variable: 'DOTENV_FILE')]) {
                    sh "cat ${DOTENV_FILE} >> .env"
                }
            }
        }

        stage('Docker build') {
            steps {
                sh "docker build -t ${ECR_REPO}:latest ."
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    // docker push
                    docker.withRegistry("https://${ECR_REPO}", "ecr:${REGION}:${AWS_CREDENTIAL_ID}") {
                        docker.image("${ECR_REPO}:latest").push()
                    }
                }
            }
        }

        stage('Deploy to VM') {
            steps {
                script {
                    def sshCredentials = credentials("${VM_ENTER_CREDENTIAL_ID}")

                    sshagent([sshCredentials]) {
                        withCredentials([usernamePassword(credentialsId: "${OSONDOSON_VM_CREDENTIAL_ID}", passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                            sh """
                                sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no -i ${sshCredentials} ${USERNAME}@${TARGET_HOST} '
                                    ls
                                '
                            """
                        }
                    }
                }
            }
        }
    }
}
